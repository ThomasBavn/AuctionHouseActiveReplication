syntax = "proto3";

package grpc;
import "google/protobuf/empty.proto";
option go_package = "https://github.com/ThomasBavn/AuctionHouseActiveReplication/grpc";

service Node {
    rpc handleAgreementAndReplicationFromLeader (Replicate) returns (Acknowledgement) {}
    rpc pingLeader (google.protobuf.Empty) returns (Acknowledgement) {}
    rpc broadcastMessage (Acknowledgement) returns (google.protobuf.Empty) {}
    rpc bid (Bid) returns (Acknowledgement) {}
    rpc result (google.protobuf.Empty) returns (Outcome) {}

}

message Bid {
    int32 clientId = 1;
    int32 uniqueBidId = 2;
    int32 amount = 3;
}

message Acknowledgement {
    string ack = 1;
}

message Outcome {
    string auctionStatus = 1;
    int32 highestBid = 2;
}

message Replicate {
    string auctionStatus = 1;
    int32 highestBidOnCurrentAuction = 2;
    string responseForRequest = 3;
    int32 uniqueIdentifierForRequest = 4;
    string currentItem = 5;
    int32 winnerId = 6;
}

//for exam we can use assignment3chitty/protos instead of github

//Important commands:
//When updating proto file:
//protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative grpc/interface.proto
